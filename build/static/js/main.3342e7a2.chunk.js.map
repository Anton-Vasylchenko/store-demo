{"version":3,"sources":["components/PopupDelete/PopupDelete.js","components/PopupDelete/index.js","assets/no-image.png","components/Product/Product.js","components/Product/index.js","components/SortOrderArrow/SortOrderArrow.js","components/SortOrderArrow/index.js","components/SortFilter/SortFilter.js","components/SortFilter/index.js","components/TextEditor/TextEditor.js","components/TextEditor/index.js","components/PopupForms/Forms/ProductForm.js","components/PopupForms/Forms/CommentForm.js","components/PopupForms/PopupForms.js","components/PopupForms/index.js","components/BtnCreateElement/BtnCreateElement.js","components/BtnCreateElement/index.js","components/Spinner/Spinner.js","components/Spinner/index.js","services/ApiServices.js","components/ProductsList/ProductsList.js","components/ProductsList/index.js","components/BackArrow/BackArrow.js","components/BackArrow/index.js","components/Comment/Comment.js","components/Comment/index.js","components/CommentsList/CommentsList.js","components/CommentsList/index.js","components/ProductDetails/ProductDetails.js","components/ProductDetails/index.js","components/EmptyPage/EmptyPage.js","components/EmptyPage/index.js","components/App/App.js","components/App/index.js","components/ScrollToTop/ScrollToTop.js","components/ErrorBoundary/ErrorBoundary.js","index.js"],"names":["PopupDelete","handleNo","handleYes","show","name","Modal","animation","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","Product","item","onDelete","React","useState","setShow","id","imageUrl","count","shortDesc","toggleShow","className","Row","Col","xs","md","onError","ev","target","src","NoImage","alt","to","SortOrderArrow","order","changeType","width","height","viewBox","fill","xmlns","d","sortFilters","title","type","SortFilter","onToggleSort","activeBtn","setActiveBtn","activeType","setActiveType","activeOrderBy","setActiveOrderBy","newType","map","el","index","toggleActive","TextEditor","content","onChangeInfo","text","setText","onSaveShanges","event","editor","data","getData","ClassicEditor","config","toolbar","onChange","onBlur","ProductForm","details","handleSubmit","action","error","setError","length","descCount","setDescCount","nameCount","setNameCount","info","weight","comments","inputsValue","setInputsValue","updateState","field","newValue","onCancelHandle","clearForm","newState","prop","showErrorMsg","formTitle","size","Alert","Form","Group","as","controlId","Label","Control","e","value","placeholder","preventDefault","product","key","CommentForm","comment","setComment","createCurrentDate","today","Date","day","toJSON","slice","replace","minutes","getMinutes","time","getHours","getSeconds","newComment","uuidv4","date","PopupForm","PopupForms","props","FormView","BtnCreateElement","NavBtnCreateElementPanel","nameBtn","Spinner","apiServices","_baseUrl","getResource","sortBy","sortOrder","url","a","axios","get","params","getProducts","getProductById","addProduct","obj","post","delProductById","delete","updateProductById","newItem","put","res","ProductsList","products","setProducts","loading","setLoading","useEffect","updateProducts","then","delProduct","Container","elem","BackArrow","history","useHistory","goBack","Comment","CommentsList","updateAllComments","commentsList","onDeleteComment","updateComment","filter","listIsEmpty","allComments","Object","keys","push","ProductView","defImg","updateProduct","createMarkup","Fragment","parse","ProductDetails","itemId","setProduct","updateProductDetails","updateProdComments","__html","Error404","EmptyPage","App","path","exact","component","render","match","withRouter","children","pathname","location","window","scrollTo","top","left","ErrorBoundary","state","hasError","this","setState","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3342e7a2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nfunction PopupDelete({ handleNo, handleYes, show, name }) {\r\n    return (\r\n        <>\r\n            <Modal animation={true} show={show} onHide={handleNo}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Delete {name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Are you sure you want to delete ?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleNo}>\r\n                        No\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleYes}>\r\n                        Yes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PopupDelete;","import PopupDelete from './PopupDelete';\r\n\r\nexport default PopupDelete;","export default __webpack_public_path__ + \"static/media/no-image.92588243.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Button } from 'react-bootstrap';\r\nimport PopupDelete from '../PopupDelete';\r\n\r\nimport NoImage from '../../assets/no-image.png';\r\n\r\nimport './Product.scss';\r\n\r\nfunction Product({ item, onDelete }) {\r\n    const [show, setShow] = React.useState(false);\r\n    const { id, name, imageUrl, count, shortDesc } = item;\r\n\r\n    const handleNo = () => setShow(false);\r\n\r\n    const handleYes = () => {\r\n        toggleShow();\r\n        onDelete(id);\r\n    };\r\n\r\n    const toggleShow = () => {\r\n        setShow(!show);\r\n    };\r\n\r\n    const addDefaultSrc = (ev) => {\r\n        ev.target.src = NoImage;\r\n    }\r\n\r\n    return (\r\n        <div className=\"product\">\r\n\r\n            <PopupDelete\r\n                show={show}\r\n                handleNo={handleNo}\r\n                handleYes={handleYes}\r\n                name={name}\r\n            />\r\n\r\n            <div className=\"product__name\">{name}\r\n                <div className=\"product__del\" onClick={toggleShow}>x</div>\r\n            </div>\r\n            <Row>\r\n                <Col xs={12} md={5}>\r\n                    <div className=\"product__image\">\r\n                        <img onError={addDefaultSrc} src={imageUrl} alt=\"product\" />\r\n                    </div>\r\n                </Col>\r\n                <Col xs={12} md={7}>\r\n                    <div className=\"product__info\">\r\n                        {shortDesc}\r\n                    </div>\r\n                    <div className=\"product__count\"> In stock: {count} pcs.</div>\r\n                </Col>\r\n            </Row>\r\n            <div className=\"product__link\">\r\n                <Link to={`/product/${id}`}>\r\n                    <Button variant=\"info\">More details...</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Product;\r\n","import Product from './Product';\r\n\r\nexport default Product;","import React from 'react';\r\n\r\nimport './SortOrderArrow.scss';\r\n\r\nfunction SortOrderArrow({ order, changeType }) {\r\n    const changeOrderType = () => {\r\n        const newOrder = order === 'asc' ? 'desc' : 'asc';\r\n        changeType(newOrder);\r\n    }\r\n\r\n    const className = order === 'desc' ? '' : 'rotated';\r\n\r\n    return (\r\n        <div className=\"sort-arrow unselectable-text\" onClick={changeOrderType}>\r\n            <svg\r\n                className={`arrow-svg ${className}`}\r\n                width=\"14\"\r\n                height=\"10\"\r\n                viewBox=\"0 0 10 6\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n                <path\r\n                    d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                    fill=\"#2C2C2C\"\r\n                />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SortOrderArrow;","import SortOrderArrow from './SortOrderArrow';\r\n\r\nexport default SortOrderArrow;","import React from 'react';\r\nimport SortOrderArrow from '../SortOrderArrow';\r\n\r\nimport './SortFilter.scss';\r\n\r\nconst sortFilters = [\r\n    { title: 'Name', type: 'name' },\r\n    { title: 'Quantity', type: 'count' }\r\n];\r\n\r\nfunction SortFilter({ onToggleSort }) {\r\n    const [activeBtn, setActiveBtn] = React.useState(0);\r\n    const [activeType, setActiveType] = React.useState('name');\r\n    const [activeOrderBy, setActiveOrderBy] = React.useState('asc');\r\n\r\n    const toggleActive = (index, type) => {\r\n        setActiveBtn(index);\r\n        setActiveType(type);\r\n        onToggleSort(type, activeOrderBy);\r\n    }\r\n\r\n    const changeOrderType = (newType) => {\r\n        setActiveOrderBy(newType);\r\n        onToggleSort(activeType, newType);\r\n    }\r\n\r\n    return (\r\n        <div className=\"sort-filter\">\r\n            <SortOrderArrow order={activeOrderBy} changeType={changeOrderType} />\r\n            <span>Sort by:</span>\r\n            <ul>\r\n                {sortFilters &&\r\n                    sortFilters.map((el, index) => {\r\n                        return <li\r\n                            key={`${el.title}_${index}`}\r\n                            className={activeBtn === index ? 'sort-active' : ''}\r\n                            onClick={() => { toggleActive(index, el.type) }}> {el.title}\r\n                        </li>\r\n                    })\r\n                }\r\n            </ul>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SortFilter\r\n","import SortFilter from './SortFilter';\r\n\r\nexport default SortFilter;","import React, { useState } from 'react';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nfunction TextEditor({ content, onChangeInfo }) {\r\n    const [text, setText] = useState(content);\r\n\r\n    const onSaveShanges = (event, editor) => {\r\n        const data = editor.getData()\r\n        setText(data);\r\n        onChangeInfo('info', text);\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"editor\">\r\n                <CKEditor\r\n                    editor={ClassicEditor}\r\n                    data={text}\r\n                    config={{\r\n                        toolbar: ['heading', '|', 'bold', 'italic', 'link', 'numberedList', 'bulletedList', 'insertTable',\r\n                            'tableColumn', 'tableRow', 'mergeTableCells', '|', 'undo', 'redo']\r\n                    }}\r\n                    onChange={(event, editor) => {\r\n                        onSaveShanges(event, editor);\r\n                    }}\r\n                    onBlur={(event, editor) => {\r\n                        onSaveShanges(event, editor);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextEditor;\r\n","import TextEditor from './TextEditor';\r\n\r\nexport default TextEditor;","import React from 'react';\r\nimport TextEditor from '../../TextEditor';\r\n\r\nimport { Alert, Modal, Col, Form, Button } from 'react-bootstrap';\r\n\r\nfunction ProductForm({ details }) {\r\n    const { show, handleNo, handleSubmit, action, item } = details;\r\n\r\n    const [error, setError] = React.useState(false);\r\n    const [descCount, setDescCount] = React.useState(item ? item.shortDesc.length : 0);\r\n    const [nameCount, setNameCount] = React.useState(item ? item.name.length : 0);\r\n\r\n    const [inputsValue, setInputsValue] = React.useState(item ? { ...item }\r\n        : {\r\n            name: '',\r\n            imageUrl: '',\r\n            count: 0,\r\n            info: '',\r\n            shortDesc: '',\r\n            height: 0,\r\n            width: 0,\r\n            weight: 0,\r\n            comments: [],\r\n        });\r\n\r\n    const updateState = (field, newValue) => {\r\n        field === 'shortDesc' && setDescCount(newValue.length);\r\n        field === 'name' && setNameCount(newValue.length);\r\n        setInputsValue({\r\n            ...inputsValue,\r\n            [field]: newValue\r\n        });\r\n    }\r\n\r\n    const onHandleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const product = {\r\n            ...inputsValue,\r\n            comments: item ? item.comments : []\r\n        }\r\n\r\n        for (let key in inputsValue) {\r\n            if (inputsValue[key] === '') {\r\n                showErrorMsg('Error! Some fields are empty!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (descCount > 70) {\r\n            showErrorMsg(`Error! Short description \r\n            must be shorter than 60 characters`);\r\n            return;\r\n        }\r\n\r\n        if (nameCount > 26) {\r\n            showErrorMsg(`Error! Name must be shorter than 26 characters`);\r\n            return;\r\n        }\r\n\r\n        !item && clearForm();\r\n\r\n        handleNo();\r\n        handleSubmit(product);\r\n    }\r\n\r\n    const onCancelHandle = () => {\r\n        handleNo();\r\n        setError(false);\r\n    }\r\n\r\n    const clearForm = () => {\r\n        const newState = {\r\n            ...inputsValue\r\n        }\r\n        for (let prop in newState) {\r\n            delete newState[prop];\r\n        }\r\n        setInputsValue({\r\n            ...newState\r\n        });\r\n    }\r\n\r\n    const showErrorMsg = (text) => {\r\n        setError(text);\r\n    }\r\n\r\n    const formTitle = action === 'create' ? 'Create New ' : 'Edit ';\r\n\r\n    return (\r\n        <>\r\n            <Modal size=\"lg\" animation={true} show={show} onHide={onCancelHandle}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{formTitle} Product</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                {error && <Alert className=\"m-2\" variant={'danger'}>\r\n                    {error}\r\n                </Alert>}\r\n\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridName\">\r\n                                <Form.Label>\r\n                                    <b>Name: <span\r\n                                        className={nameCount > 26 ? 'text-danger' : ''}>\r\n                                        ({nameCount})</span>\r\n                                    </b>\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    onChange={e => updateState('name', e.target.value)}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter the product name\"\r\n                                    value={inputsValue.name}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridImage\">\r\n                                <Form.Label> <b>Image Url</b> </Form.Label>\r\n                                <Form.Control\r\n                                    onChange={e => updateState('imageUrl', e.target.value)}\r\n                                    value={inputsValue.imageUrl}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter the image url\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Group controlId=\"formGridDesc\">\r\n                            <Form.Label>\r\n                                <b>Short description: <span\r\n                                    className={descCount > 70 ? 'text-danger' : ''}>\r\n                                    ({descCount})\r\n                                </span></b>\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                onChange={e => updateState('shortDesc', e.target.value)}\r\n                                value={inputsValue.shortDesc}\r\n                                placeholder=\"Enter the short product description\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formGridDesc\">\r\n                            <Form.Label> <b> Main description: </b> </Form.Label>\r\n\r\n                            <TextEditor onChangeInfo={updateState} content={inputsValue.info} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridHeight\">\r\n                                <Form.Label> <b> Height (cm.): </b></Form.Label>\r\n                                <Form.Control\r\n                                    onChange={e => updateState('height', e.target.value)}\r\n                                    value={inputsValue.height}\r\n                                    placeholder=\"Height\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridWidth\">\r\n                                <Form.Label> <b> Width (cm.): </b></Form.Label>\r\n                                <Form.Control\r\n                                    onChange={e => updateState('width', e.target.value)}\r\n                                    value={inputsValue.width}\r\n                                    placeholder=\"Width\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridWeight\">\r\n                                <Form.Label> <b> Weight: </b></Form.Label>\r\n                                <Form.Control\r\n                                    onChange={e => updateState('weight', e.target.value)}\r\n                                    value={inputsValue.weight}\r\n                                    placeholder=\"Weight\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridCount\">\r\n                                <Form.Label> <b> Count </b></Form.Label>\r\n                                <Form.Control\r\n                                    onChange={e => updateState('count', e.target.value)}\r\n                                    value={inputsValue.count}\r\n                                    placeholder=\"Count\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Button variant=\"secondary\" onClick={onCancelHandle}>\r\n                            Cancel\r\n                        </Button>\r\n\r\n                        <Button className=\"m-2\" variant=\"primary\" type=\"button\" onClick={onHandleSubmit}>\r\n                            {action === 'edit' ? 'Save' : 'Create'}\r\n                        </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductForm;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Modal, Col, Form, Button, Alert } from 'react-bootstrap';\r\n\r\nfunction CommentForm({ details }) {\r\n\r\n    const { show, handleNo, handleSubmit, } = details;\r\n\r\n    const [comment, setComment] = React.useState('');\r\n    const [error, setError] = React.useState(false);\r\n\r\n    const onHandleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newComment = {\r\n            id: uuidv4(),\r\n            text: comment,\r\n            date: createCurrentDate()\r\n        }\r\n\r\n        if (!comment) {\r\n            setError(true);\r\n            return;\r\n        }\r\n\r\n        clearForm();\r\n        handleNo();\r\n        handleSubmit(newComment);\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setComment('');\r\n    }\r\n\r\n    const onCancelHandle = () => {\r\n        handleNo();\r\n        setError(false);\r\n    }\r\n\r\n    const createCurrentDate = () => {\r\n        const today = new Date();\r\n        const day = today.toJSON().slice(0, 10).replace(/-/g, '/');\r\n        const minutes = (today.getMinutes() < 10 ? '0' : '') + today.getMinutes();\r\n        const time = today.getHours() + \":\" + minutes + \":\" + today.getSeconds();\r\n        return `${day} - ${time}`;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal animation={true} show={show} onHide={onCancelHandle}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Create New Comment</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                {error && <Alert className=\"m-2\" variant={'danger'}>\r\n                    Error! Text field is empty!\r\n                </Alert>}\r\n\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridImage\">\r\n                                <Form.Label>Text</Form.Label>\r\n                                <Form.Control\r\n                                    onChange={e => setComment(e.target.value)}\r\n                                    value={comment}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Please, enter your text here\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Button variant=\"secondary\" onClick={onCancelHandle}>\r\n                            Cancel\r\n                        </Button>\r\n\r\n                        <Button className=\"m-2\" variant=\"primary\" type=\"button\" onClick={onHandleSubmit}>\r\n                            Create\r\n                        </Button>\r\n                    </Form>\r\n\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CommentForm;\r\n","import React from 'react';\r\n\r\nimport ProductForm from './Forms/ProductForm';\r\nimport CommentForm from './Forms/CommentForm';\r\n\r\nfunction PopupForm(props) {\r\n    const { type } = props;\r\n\r\n    const FormView = type === 'product' ?\r\n        <ProductForm details={props} /> :\r\n        <CommentForm details={props} />;\r\n\r\n    return (\r\n        <div>\r\n            {FormView}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopupForm\r\n","import PopupForms from './PopupForms';\r\n\r\nexport default PopupForms;","import React from 'react'\r\nimport { Button } from 'react-bootstrap';\r\nimport PopupForms from '../PopupForms';\r\n\r\nimport './BtnCreateElement.scss';\r\n\r\nfunction BtnCreateElement({ nameBtn, type, action, handleSubmit, item }) {\r\n    const [show, setShow] = React.useState(false);\r\n\r\n    const handleNo = () => setShow(false);\r\n\r\n    const handleYes = () => {\r\n        toggleShow();\r\n    };\r\n\r\n    const toggleShow = () => {\r\n        setShow(!show);\r\n    };\r\n\r\n    return (\r\n        <div className=\"btn-create-element\">\r\n            <PopupForms\r\n                show={show}\r\n                handleNo={handleNo}\r\n                handleYes={handleYes}\r\n                type={type}\r\n                action={action}\r\n                handleSubmit={handleSubmit}\r\n                item={item}\r\n            />\r\n\r\n            <Button variant={action === 'edit' ? 'success' : 'primary'} onClick={toggleShow}>{nameBtn}</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BtnCreateElement\r\n","import NavBtnCreateElementPanel from './BtnCreateElement';\r\n\r\nexport default NavBtnCreateElementPanel;","import React from 'react'\r\n\r\nimport './Spinner.scss';\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <div className=\"loader\">Loading...</div>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import Spinner from './Spinner';\r\n\r\nexport default Spinner;","import axios from 'axios';\r\n\r\nclass ApiServices {\r\n    _baseUrl = 'https://608298915dbd2c0017579fcc.mockapi.io/api/v1/';\r\n\r\n    getResource = async (sortBy, sortOrder, url) => {\r\n        const { data } = await axios.get(`${this._baseUrl}${url}`, {\r\n            params: {\r\n                sortBy: sortBy,\r\n                order: sortOrder\r\n            }\r\n        })\r\n        return data;\r\n    }\r\n\r\n    getProducts = async (sortBy, sortOrder) => {\r\n        const data = this.getResource(sortBy, sortOrder, 'products');\r\n        return data;\r\n    }\r\n\r\n    getProductById = async (id) => {\r\n        const { data } = await axios.get(`${this._baseUrl}products/${id}`);\r\n        return data;\r\n    }\r\n\r\n    addProduct = async (obj) => {\r\n        await axios.post(`${this._baseUrl}products/`, obj);\r\n    }\r\n\r\n    delProductById = async (id) => {\r\n        await axios.delete(`${this._baseUrl}products/${id}`);\r\n    }\r\n\r\n    updateProductById = async (id, newItem) => {\r\n        const res = await axios.put(`${this._baseUrl}products/${id}`, newItem);\r\n        return res;\r\n    }\r\n}\r\n\r\nconst apiServices = new ApiServices();\r\n\r\nexport default apiServices;\r\n\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport Product from '../Product';\r\nimport SortFilter from '../SortFilter';\r\nimport BtnCreateElement from '../BtnCreateElement';\r\nimport Spinner from '../Spinner';\r\n\r\nimport apiServices from '../../services/ApiServices';\r\n\r\nimport './ProductsList.scss';\r\n\r\nfunction ProductsList() {\r\n    const [products, setProducts] = React.useState(null);\r\n    const [loading, setLoading] = React.useState(true);\r\n\r\n    React.useEffect(() => {\r\n        updateProducts();\r\n    }, []);\r\n\r\n    const updateProducts = (sortBy = 'name', order = 'asc') => {\r\n        setLoading(true);\r\n        apiServices.getProducts(sortBy, order).then(data => {\r\n            setLoading(false);\r\n            setProducts(data);\r\n        });\r\n    }\r\n\r\n    const delProduct = (id) => {\r\n        apiServices.delProductById(id).then(e => {\r\n            updateProducts();\r\n        });\r\n    }\r\n\r\n    const createProduct = (obj) => {\r\n        setLoading(true);\r\n        apiServices.addProduct(obj).then(e => {\r\n            setLoading(false);\r\n            updateProducts();\r\n        });\r\n    }\r\n\r\n    const onChangeSort = (sortBy, order) => {\r\n        updateProducts(sortBy, order);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"content-wrapper\">\r\n                <SortFilter onToggleSort={onChangeSort} />\r\n\r\n                <BtnCreateElement\r\n                    nameBtn={'+Add Product'}\r\n                    type={'product'}\r\n                    action={'create'}\r\n                    handleSubmit={createProduct}\r\n                />\r\n\r\n                {loading ? <Spinner /> :\r\n                    products && products.map(elem => {\r\n                        return <Product item={elem}\r\n                            key={elem.id}\r\n                            onDelete={delProduct}\r\n                        />\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProductsList;\r\n\r\n","import ProductsList from './ProductsList';\r\n\r\nexport default ProductsList;","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport './BackArrow.scss';\r\n\r\nfunction BackArrow() {\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div className=\"back-arrow\" onClick={() => history.goBack()}>\r\n            <svg viewBox=\"0 0 24 24\"><g>\r\n                <path className=\"arrow-icon\" d=\"M20 11H7.414l4.293-4.293c.39-.39.39-1.023 0-1.414s-1.023-.39-1.414 0l-6 6c-.39.39-.39 1.023 0 1.414l6 6c.195.195.45.293.707.293s.512-.098.707-.293c.39-.39.39-1.023 0-1.414L7.414 13H20c.553 0 1-.447 1-1s-.447-1-1-1z\"></path>\r\n            </g></svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackArrow;\r\n","import BackArrow from './BackArrow';\r\n\r\nexport default BackArrow;","import React from 'react';\r\nimport PopupDelete from '../PopupDelete';\r\n\r\nimport './Comment.scss';\r\n\r\nfunction Comment({ item, onDelete }) {\r\n    const { id, text, date } = item;\r\n    const [show, setShow] = React.useState(false);\r\n\r\n    const handleNo = () => setShow(false);\r\n\r\n    const handleYes = () => {\r\n        toggleShow();\r\n        onDelete(id);\r\n    };\r\n\r\n    const toggleShow = () => {\r\n        setShow(!show);\r\n    };\r\n\r\n    return (\r\n        <div className=\"comment\" key={id}>\r\n            <PopupDelete\r\n                show={show}\r\n                handleNo={handleNo}\r\n                handleYes={handleYes}\r\n                name={'comment'}\r\n            />\r\n\r\n            <div className=\"comment__del\" onClick={toggleShow}>x</div>\r\n            <p>{text}</p>\r\n\r\n            <div className=\"comment__bottom\">\r\n                <span>Created at: {date}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment;\r\n","import Comment from './Comment';\r\n\r\nexport default Comment;","import React from 'react';\r\nimport BtnCreateElement from '../BtnCreateElement';\r\nimport Comment from '../Comment';\r\n\r\nimport './CommentsList.scss';\r\n\r\nfunction CommentsList({ updateAllComments, commentsList, product }) {\r\n    const onCreateComment = (obj) => {\r\n        product.comments.push(obj);\r\n        updateAllComments(product);\r\n    }\r\n\r\n    const onDeleteComment = (id) => {\r\n        const allComments = product.comments;\r\n        const updateComment = allComments.filter(function (obj) {\r\n            return obj.id !== id;\r\n        });\r\n        product.comments = updateComment;\r\n        updateAllComments(product);\r\n    }\r\n\r\n    const listIsEmpty = <p className=\"empty-list\"> No comments to display </p>;\r\n\r\n    const allComments = Object.keys(commentsList).length ?\r\n        commentsList.map(item => {\r\n            return (\r\n                <Comment\r\n                    key={item.id}\r\n                    item={item}\r\n                    onDelete={onDeleteComment}\r\n                />)\r\n        }) : listIsEmpty\r\n\r\n    return (\r\n        <div className=\"comments-list\">\r\n            <h4>\r\n                Comments:\r\n            </h4>\r\n\r\n            <BtnCreateElement\r\n                nameBtn={'+Add comment'}\r\n                type={'comment'}\r\n                handleSubmit={onCreateComment}\r\n            />\r\n\r\n            {allComments}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentsList;\r\n","import CommentsList from './CommentsList';\r\n\r\nexport default CommentsList;","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport BackArrow from '../BackArrow';\r\nimport Spinner from '../Spinner';\r\nimport CommentsList from '../CommentsList';\r\nimport BtnCreateElement from '../BtnCreateElement';\r\nimport parse from 'html-react-parser';\r\n\r\nimport apiServices from '../../services/ApiServices';\r\n\r\nimport NoImage from '../../assets/no-image.png';\r\n\r\nimport './ProductDetails.scss';\r\n\r\nfunction ProductDetails({ itemId }) {\r\n    const [product, setProduct] = React.useState(null);\r\n    const [loading, setLoading] = React.useState(true);\r\n\r\n    React.useEffect(() => {\r\n        apiServices.getProductById(itemId).then(data => {\r\n            setProduct(data);\r\n            setLoading(false);\r\n        })\r\n    }, [itemId]);\r\n\r\n    const addDefaultSrc = (ev) => {\r\n        ev.target.src = NoImage;\r\n    }\r\n\r\n    const updateProduct = async (newItem) => {\r\n        apiServices.updateProductById(itemId, newItem).then(({ data }) => {\r\n            setProduct(data);\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    const updateProductDetails = async (newItem) => {\r\n        setLoading(true);\r\n        updateProduct(newItem);\r\n    }\r\n\r\n    const updateProdComments = async (newItem) => {\r\n        updateProduct(newItem);\r\n    }\r\n\r\n    const createMarkup = (info) => {\r\n        return {\r\n            __html: info\r\n        };\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"content-wrapper\">\r\n                {loading ? <Spinner /> :\r\n                    product &&\r\n                    <ProductView item={product}\r\n                        defImg={addDefaultSrc}\r\n                        updateProduct={updateProductDetails}\r\n                        createMarkup={createMarkup}\r\n                    />\r\n                }\r\n\r\n                {product && <CommentsList\r\n                    commentsList={product.comments}\r\n                    product={product}\r\n                    updateProduct={updateProduct}\r\n                    updateAllComments={updateProdComments}\r\n                />}\r\n            </div>\r\n        </Container>\r\n    )\r\n};\r\n\r\nconst ProductView = ({ item, defImg, updateProduct, createMarkup }) => {\r\n\r\n    const { name, imageUrl, weight, count, width, height, info } = item;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"product-details\">\r\n                <div className=\"product-details__name\">\r\n                    <BackArrow />\r\n                    <p>\r\n                        {name}\r\n                    </p>\r\n\r\n                    <BtnCreateElement\r\n                        nameBtn={'Edit'}\r\n                        action={'edit'}\r\n                        type={'product'}\r\n                        item={item}\r\n                        handleSubmit={updateProduct}\r\n                    />\r\n                </div>\r\n\r\n                <Row>\r\n                    <Col xs={12} md={6}>\r\n                        <div className=\"product-details__img\">\r\n                            <img onError={defImg} src={imageUrl} alt=\"product-poster\" />\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                        <div className=\"product-details__info\">\r\n                            <div>{parse(info)}</div>\r\n                        </div>\r\n                        <div className=\"product-details__options\">\r\n                            <div className=\"option options__size\">\r\n                                <span>Height: {height} cm.</span>\r\n                                <span>Width: {width} cm.</span>\r\n                            </div>\r\n                            <div className=\"option options__weight\">\r\n                                <span>Weight: {weight}</span>\r\n                            </div>\r\n                            <div className=\"option options__count\">\r\n                                <span>In stock: {count} pcs.</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProductDetails;\r\n\r\n","import ProductDetails from './ProductDetails';\r\n\r\nexport default ProductDetails;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nfunction Error404() {\r\n    return (\r\n        <Container>\r\n            <div className=\"content-wrapper\">\r\n                <h4 className=\"m-4\">Page not found</h4>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Error404;","import EmptyPage from './EmptyPage';\r\n\r\nexport default EmptyPage;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport ProductsList from '../ProductsList';\r\nimport ProductDetails from '../ProductDetails';\r\nimport EmptyPage from '../EmptyPage';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route path=\"/\" exact component={ProductsList} />\r\n\r\n        <Route path=\"/product/:id\" render={({ match }) => {\r\n          return <ProductDetails itemId={match.params.id} />\r\n        }} />\r\n\r\n        <Route path=\"*\" component={EmptyPage} />\r\n      </Switch>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import App from './App';\r\n\r\nexport default App;","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = ({ children, location: { pathname } }) => {\r\n    useEffect(() => {\r\n        window.scrollTo({\r\n            top: -50,\r\n            left: 0\r\n        });\r\n    }, [pathname]);\r\n\r\n    return children || null;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);","import React, { Component } from 'react';\r\nimport EmptyPage from '../EmptyPage';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            hasError: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.hasError) {\r\n            return <EmptyPage />\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport App from './components/App';\r\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop';\r\n\r\nimport ErrorBoundary from './components/ErrorBoundary/ErrorBoundary';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <ErrorBoundary>\r\n\r\n      <ScrollToTop>\r\n        <App />\r\n      </ScrollToTop>\r\n\r\n    </ErrorBoundary>\r\n  </Router >,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}